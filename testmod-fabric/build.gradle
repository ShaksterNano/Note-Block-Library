plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}

archivesBaseName = "${rootProject.archives_base_name}-test-fabric-mc${rootProject.minecraft_version}"

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation("net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}")
    modApi("net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}")
    // Remove the next line if you don't want to depend on the API
    modApi("dev.architectury:architectury-fabric:${rootProject.architectury_api_version}")

    implementation project(path: ":fabric", configuration: "namedElements")
    common(project(path: ":common", configuration: "namedElements")) {
        transitive = false
    }
    common(project(path: ":testmod-common", configuration: "namedElements")) {
        transitive = false
    }

    modRuntimeOnly("com.github.Chocohead:Fabric-ASM:v${rootProject.fabric_asm_version}")
    modRuntimeOnly("com.terraformersmc:modmenu:${rootProject.modmenu_version}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}
